name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: 1.81.0
  RUST_VERSION_FMT: nightly-2024-02-07
  GIT_BRANCH: ${{ github.head_ref || github.ref_name }}

jobs:
  build:
    runs-on: buildjet-4vcpu-ubuntu-2204

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - run: rustup target add wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --bin network-watchtower --verbose

  clippy:
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: "clippy"
      - uses: Swatinem/rust-cache@v2
      - name: Clippy
        run: cargo clippy --all --all-features

  fmt:
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION_FMT }}
          components: rustfmt
      - run: cargo +${{ env.RUST_VERSION_FMT }} fmt --all -- --check

  cargo-toml-fmt-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: setup binstall
        uses: taiki-e/install-action@cargo-binstall
      - name: Install Cargo.toml linter
        run: cargo binstall --no-confirm cargo-sort
      - name: Run Cargo.toml sort check
        run: cargo sort -w --check

  test:
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: "wasm32-unknown-unknown"
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo nextest run --all-features --all-targets
